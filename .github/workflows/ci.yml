name: CI

on:

  push:
    branches:
      - main

jobs:

  example:
    name: Run default case
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy matplotlib
      - name: Build and run
        run: |
          bash web/sphinx/example/data/exec.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@main
        with:
          name: SimResult
          path: result

  build-doc:
    name: Build documentation
    runs-on: ubuntu-latest
    needs: [example]
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
      - name: Download simulation result
        uses: actions/download-artifact@main
        with:
          name: SimResult
          path: web/sphinx/example/data
      - name: Setup node
        uses: actions/setup-node@v4
      - name: Install TypeScript
        run: |
          npm install -g typescript
      - name: Install wasm-pack
        run: |
          cargo install wasm-pack
      - name: Build library crate
        run: |
          cargo build --release --lib
      - name: Prepare destination and temporary space
        run: |
          mkdir artifacts
          mkdir tmp
      - name: Build Sphinx documentation
        run: |
          docker run \
            --rm \
            --volume ${PWD}:/project \
            --workdir /project \
            sphinxdoc/sphinx:latest \
            sphinx-build -M html web/sphinx tmp
          cp -r tmp/html/* artifacts/
      - name: Build WebAssembly
        run: |
          cd web/websim
          mkdir artifacts
          wasm-pack build --target web
          cp pkg/*.js artifacts/
          cp pkg/*.wasm artifacts/
          cp pkg/*.ts typescript/
          tsc --outDir artifacts/
          cd ../..
          mkdir artifacts/_static/websim
          mv web/websim/artifacts/* artifacts/_static/websim/
      - name: Build crate documentation
        run: |
          cd web/websim
          cargo doc \
            --no-deps \
            --document-private-items \
            --package=pendulum \
            --package=wasm_wrapper
          cd ../..
          mkdir artifacts/rustdoc
          mv web/websim/target/doc/* artifacts/rustdoc/
      - name: Upload HTML artifacts
        uses: actions/upload-artifact@main
        with:
          name: HTML
          path: artifacts

  deploy-doc:
    name: Deploy documentation
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build-doc]
    steps:
      - name: Download HTML artifacts
        uses: actions/download-artifact@main
        with:
          name: HTML
          path: artifacts
      - name: Setup GitHub Pages
        uses: actions/configure-pages@main
      - name: Upload HTML
        uses: actions/upload-pages-artifact@main
        with:
          path: artifacts
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@main

